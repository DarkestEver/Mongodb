# -*- coding: utf-8 -*-
"""
Created on Tue Aug 14 22:23:12 2018

@author: ksingh
"""

def get_loginid_tractsess(driver,ui_type=1):
    if ui_type == 1:
        log_mesage('old ui')
        log_mesage('excludes-suggestion 1')
        driver.find_element_by_class_name('excludes-suggestion-link').click()
        sleep(randsec())
        log_mesage('excludes-suggestion 2')
        driver.find_element_by_class_name('excludes-suggestion-link').click()
        sleep(randsec())
    elif ui_type == 2:
        log_mesage('new ui')
        log_mesage('keyword 1')
        driver.get_element_by_xpath("//input[@placeholder='Enter keywords …']").send_keys('dell')
        sleep(randsec())
        log_mesage('keyword 2')
        driver.get_element_by_xpath("//input[@placeholder='Enter keywords …']").send_keys('accenture')     
        sleep(randsec())
        
def click_next_pagination(driver,ui_type=1):
    scrap = False
    if ui_type==1:
        try:
            driver.find_element_by_xpath('//*[@id="pagination"]/a[2]').click()
            scrap = True
        except:
            sleep(randsec())
            try:
                driver.find_element_by_xpath("//*[@class='next-pagination page-link']").click()
                scrap = True
            except:
                try:
                    sleep(randsec())
                    driver.find_element_by_xpath("//*[@class='next-pagination page-link']").click()
                    scrap = True
                except:
                    scrap = False
                    print('clicking next pagination - error')
    elif ui_type==2:
         sleep(randsec())
         try:
            driver.find_element_by_xpath(".search-results__pagination-next-button").click()
            scrap = True
         except:
            try:
                sleep(randsec())
                driver.find_element_by_xpath(".search-results__pagination-next-button").click()
                scrap = True
            except:
                scrap = False
                print('clicking next pagination - error')
    return scrap

def check_ui_type(driver):
    try:
        driver.find_element_by_css_selector('collapsible-container').text() 
        return 2
    except:
        return 1        

df = pd.read_csv(r"D:\linkedin crawling\udc csv\job functon search.csv",encoding='ISO_8859_5')
df_job_level = pd.read_csv(r"D:\linkedin crawling\udc csv\job level search .csv",encoding='ISO_8859_5')
def get_jcriteria_search(df,jobtitle):
    title = jobtitle.lower()
    for index, row in df.iterrows():
        search_term = row['search'].lower()
        criteria = row['criteria'].lower()
        #print(search_term,criteria )
        if criteria == 'contains' and search_term in title:
            return row['return']
        if criteria == 'begins' and title.startswith(search_term, 0,len(title)) == search_term:
            return row['return']
        if criteria  == 'end' and title[len(title) - len(search_term):] == search_term:
            return row['return']
